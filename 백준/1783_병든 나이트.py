# 이동횟수가 4번보다 적은 경우/4번 이상인 경우
# 이동횟수가 4번 = 체스판 최소 3*7 크기
# 체스판이 3보다 작거나 7보다 작은 경우 4번이 되지 않는 경우로 간주
# n이 3보다 작거나 m이 7보다 작은 경우를 3가지로 분할
# n == 1 / n == 2 / n >= 3, m < 7
import sys
n,m = map(int,sys.stdin.readline().rstrip().split())
def solution(n,m):
    # 현재 나이트가 존재하는 칸
    if n == 1:
        result = 1 
    # 이동 가능 횟수 최대 3번(4번 이상 이동시 4가지 모두 사용해야 하기 때문)
    # 방문한 칸 수는 이동 가능 횟수 + 1
    elif n == 2:
        result = min(4,(m-1)//2 + 1)
    # n이 3보다 크거나 같은 경우에는 오른쪽으로 1칸씩만 이동해야한다.
    # 최대 3번만 이동할 수 있으므로 m의 값이 곧 이동 칸 수이다.
    elif n >= 3 and m < 7:
        result = min(4,m)
    # 4가지의 이동방법을 모두 사용함
    # 그 후에 1,4번의 이동방법만 사용하여 이동
    # 2,3번 이동 1회씩 + 1,4번 이동 반복
    else:
        move = 2 + (m-5) # m에서 1칸(현재 있는 칸),이동한 4칸을 뺀다
        result = move + 1
    return result
print(solution(n,m))
